{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["DepositWithdrawalTable","react_default","a","createElement","className","App_DepositWithdrawalHeader","App_DepositWithdrawalRow","items","this","props","React","Component","DepositWithdrawalHeader","DepositWithdrawalRow","rows","forEach","item","index","amount","push","key","style","color","date","category","fontSize","detail","react_number_format_es","textAlign","value","displayType","thousandSeparator","prefix","renderText","formattedValue","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFilterTextChange","bind","assertThisInitialized","e","onFilterTextChange","target","onClick","onClickPlusButton","onClickMinusButton","onClickTotalButton","onChange","type","placeholder","DetailItemsBox","_this2","setState","filterMode","state","filterText","_this3","filteredItems","filter","length","indexOf","result","App_SearchBar","App_DepositWithdrawalTable","App_TableDataCalculationResult","TableDataCalculationResult","ITEMS","unit","App","App_DetailItemsBox","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ba9c731f.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport NumberFormat from 'react-number-format';\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <DetailItemsBox items={ITEMS} />\n    </div>\n  );\n}\n\nclass DepositWithdrawalTable extends React.Component {\n  render() {\n    return (\n        <table className='styled-table'>\n          <DepositWithdrawalHeader />\n          <DepositWithdrawalRow items={this.props.items} />\n        </table>\n      );\n  }\n}\n\nclass DepositWithdrawalHeader extends React.Component {\n  render() {\n    return (\n      <thead>\n        <tr>\n          <th>date</th>\n          <th>category</th>\n          <th>amount</th>\n        </tr>\n      </thead>)\n  }\n}\n\nclass DepositWithdrawalRow extends React.Component {\n  render() {\n    const items = this.props.items;\n    let rows = []\n    items.forEach((item, index) => {\n      item.amount < 0 ? \n      rows.push(<tr key={index}>\n        <td><span style={{color: 'red'}}>{item.date}</span></td>\n        <td>\n          <div className='container'>\n              <span style={{color: 'red'}}>{item.category}</span>\n              <span style={{color: 'greay', fontSize:7}}>{item.detail}</span>\n          </div>\n        </td>\n        <td>\n          <NumberFormat\n             className=\"align-right\" style={{color: 'red', textAlign: 'right'}}\n            value={item.amount}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₩'}\n            renderText={formattedValue => <span style={{color:'red'}}>{formattedValue}</span>} // <--- Don't forget this!\n          /></td>\n    </tr>) :\n         rows.push(<tr key={index}>\n          <td><span style={{color: 'blue'}}>{item.date}</span></td>\n          <td><span style={{color: 'blue'}}>{item.category}</span></td>\n          <td>\n          <NumberFormat\n             className=\"align-right\" style={{color: 'blue', textAlign: 'right'}}\n            value={item.amount}\n            displayType={'text'}\n            thousandSeparator={true}\n            prefix={'₩'}\n            renderText={formattedValue => <span style={{color:'blue'}}>{formattedValue}</span>} // <--- Don't forget this!\n          /></td>\n        </tr>)\n    });\n    return <tbody>{rows}</tbody>;\n  }\n}\n\nclass SearchBar extends React.Component {\nconstructor(props) {\n  super(props);\n  this.handleFilterTextChange = this.handleFilterTextChange.bind(this)\n}\n\nhandleFilterTextChange(e) {\n  this.props.onFilterTextChange(e.target.value);\n}\n\n  render () {\n    return (\n      <div>\n        <p>헌금사용현황</p>\n        <div>\n        <button onClick={this.props.onClickPlusButton}>+</button>\n        <button onClick={this.props.onClickMinusButton}>-</button>\n        <button onClick={this.props.onClickTotalButton}>total</button>\n        <input onChange={this.handleFilterTextChange} type=\"text\" placeholder=\"Search...\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass DetailItemsBox extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterText: '',\n      filterMode: 'total'\n    };\n    this.onClickPlusButton = this.onClickPlusButton.bind(this);\n    this.onClickMinusButton = this.onClickMinusButton.bind(this);\n    this.onClickTotalButton = this.onClickTotalButton.bind(this);\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n  }\n\n  handleFilterTextChange(filterText) {\n    this.setState({\n      filterText: filterText\n    });\n  }\n\n  onClickPlusButton = () => {\n     this.setState({filterMode: 'plus'})\n  }\n  onClickMinusButton = () => {\n    this.setState({filterMode: 'minus'})\n  }\n  onClickTotalButton = () => {\n    this.setState({filterMode: 'total'})\n  }\n\n  render () {\n    const items = this.props.items;\n    let filteredItems = [];\n    if (this.state.filterMode === 'plus') {\n      filteredItems = items.filter((item)=> item.amount > 0);\n    } else if (this.state.filterMode === 'minus') {\n      filteredItems = items.filter((item)=> item.amount < 0);\n    } else {\n      filteredItems = items\n    }\n\n    if (this.state.filterText.length > 0) {\n      filteredItems = filteredItems.filter((item) => { \n        let result = item.amount > 0 ? item.category.indexOf(this.state.filterText) > -1\n        : item.category.indexOf(this.state.filterText) > -1 || item.detail.indexOf(this.state.filterText) > -1 \n        return result;\n      })\n    }\n    \n    let result = 0;\n    filteredItems.forEach((item) => {\n        result = result + item.amount;\n    })\n    return (\n      <div className='box'>\n        <SearchBar onClickPlusButton={this.onClickPlusButton} \n                   onClickMinusButton={this.onClickMinusButton}  \n                   onClickTotalButton={this.onClickTotalButton}\n                   onFilterTextChange={this.handleFilterTextChange}\n        />\n        <DepositWithdrawalTable items={filteredItems} />\n        <TableDataCalculationResult result={result} />\n      </div>\n      );\n    }\n}\n\nclass TableDataCalculationResult extends React.Component {\n  render() {\n    return (\n      <NumberFormat\n      className=\"align-right\" style={{color: 'blue', textAlign: 'right'}}\n     value={this.props.result}\n     displayType={'text'}\n     thousandSeparator={true}\n     prefix={'₩'}\n     renderText={formattedValue => <p> balance: {formattedValue}</p>}// <--- Don't forget this!\n   />\n    );\n  }\n}\n// FinancialDashboard : 전체\n//    CurrentStatusBox : 현재지표 박스\n//    DetailItemsBox : 세부항목 박스 \n//        SearchBar : 검색바\n//        DepositWithdrawalTable : 입출금테이블 ---\n//              DepositWithdrawalHeader: 테이블헤더 ---\n//              DepositWithdrawalRow: 행 ---\n//       TableDataCalculationResultBox : 결과 박스\n//              StartDateFinancialInclusionSwich: 시작일 재정 포함 여부 \n//              TableDataCalculationResult: 테이블 결과\nconst ITEMS = [\n  {date: '2021/10/07', category: '온라인 말씀 사역', detail: 'Zoom유료결제(16.49$)', amount: -20000, unit: '$'},\n  {date: '2021/10/8', category: '헌금', detail: '박찬희대표님', amount: 100000, unit: '₩'},\n  {date: '2021/11/07', category: '온라인 말씀 사역', detail: 'Zoom유료결제(16.49$)', amount: -20000, unit: '$'},\n  {date: '2021/11/10', category: '헌금', detail: '박찬희대표님', amount: 100000, unit: '₩'},\n  {date: '2021/12/07', category: '온라인 말씀 사역', detail: 'Zoom유료결제(16.49$)', amount: -20000, unit: '$'},\n  {date: '2021/12/16', category: '헌금', detail: '박찬희대표님', amount: 100000, unit: '₩'},\n]\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}